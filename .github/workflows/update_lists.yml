name: Update AI Blocklists
on:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12 PM UTC
  workflow_dispatch:       # Manual trigger option

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get complete history to allow rebasing

      # Configure Git
      - name: Set up Git
        run: |
          git config --global user.name "Automated Updater"
          git config --global user.email "actions@github.com"

      # Pull latest changes with rebase
      - name: Sync with remote
        run: git pull --rebase origin main

      # Your domain discovery and processing steps
      - name: Fetch AI domains
        run: |
          curl --retry 3 -s "https://crt.sh/?q=%25.ai%25&output=json" | 
            jq -r '.[].name_value' | 
            sed 's/\*\.//g; s/^\.//' |
            grep -iE '\.ai$|ai\-|gpt|llm|model|chatbot' |
            awk 'length($0)>3 && !seen[tolower($0)]++' > new_AI_list.txt

      - name: Generate combined list
        run: |
          {
            echo "# Manual list - Updated $(date +'%Y-%m-%d')"
            grep -v '^#' manual_block_AI.txt | sed '/^$/d'
            echo ""
            echo "# Auto-discovered list - Generated on $(date +'%Y-%m-%d')"
            [ -s new_AI_list.txt ] && cat new_AI_list.txt || echo "# No new domains found"
          } > combined_AI_list.txt

      # Commit and push with conflict resolution
      - name: Push updates
        run: |
          git add new_AI_list.txt combined_AI_list.txt
          
          # Only commit if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Auto-update: $(date +'%Y-%m-%d')"
            
            # Try pushing with rebase
            attempts=0
            max_attempts=3
            
            while [ $attempts -lt $max_attempts ]; do
              git pull --rebase origin main
              if git push origin main; then
                echo "Push successful"
                break
              else
                attempts=$((attempts+1))
                echo "Push failed, attempt $attempts of $max_attempts"
                sleep 5
              fi
            done
            
            if [ $attempts -eq $max_attempts ]; then
              echo "Failed to push after $max_attempts attempts"
              exit 1
            fi
          else
            echo "No changes to commit"
          fi
